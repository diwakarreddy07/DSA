**** Arrays ***

=> Array is a data Structure , that is used to store multiple data of same type in an contiguous memeory location is called Array.
=> we cant store multiple type of data in a single array:
      arr={10,'c',"Strin",10.2};
=> we cant store only same type of data: {1,2,3,4,5} or {"deva","Mahesh","sunil"};

=>all the Data of the array will store in Heap Memory.
=> all the variables or refernce of that is stored in Stack Memory.

=> Contiguous Memory means, if 1st element is stores in 100 then 2nd element in 104 and 3rd is 108 , because the size in int is 4.

syntax:
* int[] arr=new int[5] ,means the array size in 5;
* int[] arr={......};
  int arr[]={.......};
  int []arr={........};

ex:
int[] arr={1,2,3,4,5};

=> in arrays it follows indexes: means 1 is in 0,2 is in 1,3 is in 2 , so on....
=> to get a value , we will get through indexes:
eg:
int[] arr={1,2,3,4,5};
we need to get 1 then, 1 is in index 0, so
arr[0] => this contain 1

----------------------------------------
eg:
Print Numbers from 1-5:
class Main {
    public static void main(String[] args) {
        int arr[]={1,2,3,4,5};
        for(int i=0;i<5;i++)
        {
        System.out.println(arr[i]);
       }
    }
}
--------------------------------------------------------
=> in above we mention the end value directly , how can we know the end to get end we can use "arr.length".

=> we can print arrays in 3 ways: 
      *using for loop.
      *using for each loop
      *using Arrays.toString() method.

=> Arrays.toString() is an in-built method to print array values , it was present in import java.util.Arrays;
Eg:

import java.util.Arrays;
class Main {
    public static void main(String[] args) {
        int arr[]={1,2,3,4,5};
        System.out.println(Arrays.toString(arr));
    }
}

=> Internally toString contains for loop,and it will Print along with [ and ] along with comas " , " ;
---------------------------------------------------------------------------------------------------------------------
*** Camme lcase and Snake case***
=> Snake cse will contain Special Symbols when another word is attaching like(odd_number).
=> Cammel case will Contain Upper Letter when another word is Attaching(oddNumber).

=>Java Strictly Follows Cammel Case.
=> All the in-built methods which was written in java will be in Cammel Case(like: totTring)

-----------------------------------------------------------------------------------------------------------------------
q: Find the Highest Value in an Arry:
code:

import java.util.*;
class Main{
    public static void main(String[] args){
        int arr[]={1,11,3,4,5};
        int max=0;
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]>max)
            {
                max=arr[i];
            }
        }
        System.out.println(max);
    }
}
----------------------------------------------------------------------------------------------------------------------
Q: Find Second Highest Number:

class Main
{
    public static void main(String args[])
    {
        int arr[]={1,2,3,4,5};
        int max=0;
        int secondMax=0;
        
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]>max)
            {
                secondMax=max;
                max=arr[i];
            }
            else if(arr[i]>secondMax)
            {
                secondMax=arr[i];
            }
        }
        System.out.println(secondMax);
    }
}
------------------------------------------------------------------------------------------------------------------------
** Array Object Creation***

int[] arr=new arr[5];
=> here we are using new Keyword to create a object.
=> Array size is Fixed in this format.
=> arr refernce is store in Stack.
=> object is stored in heap , with the given size.

=> in this , if the array is int type , then if we do not add any values to it then , the values are: 0's.
=> if the array is String type, it will return "null" values.


------------------------------------------------------------------------------------------------------------------------------
=> Storing the values into Arrays(input taking)

import java.util.*;
class Main
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        int arr[]=new int[5];
        
        for(int i=0;i<arr.length;i++)
        {
            arr[i]=sc.nextInt();
        }
        
        // Printing the Array
        for(int i=0;i<arr.length;i++)
        {
            System.out.print(arr[i]+" ");
        }
    }
}
---------------------------------------------------------------------------------------------------------------------------------
=> Check the array sorted in which sorting or not:

class Main {
    public static void main(String[] args) {
        int arr[]={5,4,3,2,1};
        int n=arr.length-1;
        res(arr,n);
    }
    static void res(int[] arr,int n)
    {
        boolean asc=true;
        boolean dsc=true;
        for(int i=0;i<n;i++)
        {
            if(arr[i]>=arr[i+1])
            {
                asc=false;
            }
            else if(arr[i]<=arr[i+1])
            {
                dsc=false;
            }
            
        }
        if(asc)
        {
            System.out.print(" Ascending Sorted ");
        }
        else if(dsc)
        {
            System.out.print("Descending Sorted");
        }
        else
        {
            System.out.println("Not Sorted");
        }
    

    }
}
